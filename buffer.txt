# SymAccount :
1. New user Registration case :
  - createAccount.jsp
	- processCreateAccountAction.java
		- com.symantec.symaccount.forms.Profile.formBeanToLdapProfile()
			- com.symantec.utils.FormUtils.trimAndConvertLatinToUTF(String)
		-com.symantec.uamCommon.webservices.profile.ProfileDeligateImpl.createProfile(LdapProfile, boolean, String, String, String)
		-com.symantec.uamCommon.webservices.profile.ProfileDeligateImpl.validateCreateProfileForm(LdapProfile, boolean, ValidationRules, ArrayList)
		-com.symantec.uamCommon.validation.ValidationRules.validateCreateProfileForm(LdapProfile, boolean)
			-com.symantec.uamCommon.validation.ValidationUtils.validateString(String, String, boolean)
				-com.symantec.uamCommon.validation.ValidationUtils.validateStringContent(String, int, int, String, String)
					-com.symantec.uamCommon.validation.ValidationUtils.isWithinLatin1(String)
					
					

2. Update Account/profile case :
	- /SymAccount/WebRoot/updateAccount.jsp
	- /SymAccount/src/com/symantec/symaccount/actions/ProcessUpdateAccountAction.java
		- com.symantec.symaccount.forms.Profile.formBeanToLdapProfile()
			- com.symantec.utils.FormUtils.trimAndConvertLatinToUTF(String)
		- com.symantec.uamCommon.webservices.profile.ProfileDeligateImpl.updateProfile(String, LdapProfile, boolean, String)
		- com.symantec.uamCommon.validation.ValidationRules.validateUpdateProfileForm(LdapProfile, boolean, String)
			-com.symantec.uamCommon.validation.ValidationRules.validateProfileForm(LdapProfile, String[], boolean)
				-com.symantec.uamCommon.validation.ValidationUtils.validateString(String, String)
					-com.symantec.uamCommon.validation.ValidationUtils.validateString(String, String, boolean)
						-com.symantec.uamCommon.validation.ValidationUtils.validateStringContent(String, int, int, String, String)
							-com.symantec.uamCommon.validation.ValidationUtils.isWithinUTF8(String)

3. Login Page : for usename field validation

	- /SymAccount/WebRoot/login.jsp
	- 
	%NOTE: Most of the changes are done here.
	
# mysymantec/rewards applications : 
1. MySymantec CreateProfile page: Click on "Register Now" button from MySymnatec's home page
	- It's not coming from Rewards application's page.Have to test wether it call's SymAccount's code for field validation or not.
		- Check after changing the code at SymAccount's end wether it's same response or not.
		- Also update city with UTF8,and check on enroll page how it is coming.

2. rewards applications -> Enroll page
	http://licensingprograms-sbx.symantec.com/buyingprogram/toModule.do?prefix=/iclick/createContract&page=/buyingprogram/createContract/initCreate.do 
	- /buyingprogram/j2ee-apps/buyingprogram/web-app/iclick/createContract/newAgreement.jsp
	- com.symantec.iclick.create.actions.SetupContractRequestAction
		- com.symantec.iclick.create.actions.CommonAction.encodeFields(ContractRequest)
		- com.symantec.iclick.create.actions.SetupContractRequestAction.validateFields(ActionErrors, ContractRequest, Locale) 
			//isWithinLatin1 is used here :) com.symantec.utils.FormUtils.isWithinLatin1(String)
	-

	%NOTE : 
		- Currently Company Name doesn't throw any "...contains special caharaters..." error, but address filds does.
		- Try to find out where this class methoda are used, as it contains isWithinLatin method: com.symantec.portal.util.ValidationUtils


#SAM module :
1. Enroll a user page.
	-/symacctmgt/j2ee-apps/symacctmgt/web-app/createAccount/createAccount.jsp // User Management -> Enroll a user
	-/symacctmgt/j2ee-apps/symacctmgt/src/com/symantec/sam/createAccount/actions/CreateAccountAction.java	
		-com.symantec.sam.actions.CommonAccountAction.convertToEncoding(UserAccount)
		-com.symantec.sam.util.ProfileBroker.convertUserAccountToLdapProfile(UserAccount, LdapProfile)
		-com.symantec.sam.delegates.CreateAccountDelegate.validate(LdapProfile, boolean)
			-com.symantec.sam.interfacesImpl.WebServiceClientImpl.validateCreateProfile(LdapProfile, boolean)
				-com.symantec.it.ValidationWebServiceImpl.validateCreateProfileForm(LdapProfile, boolean)
					-com.symantec.uamCommon.validation.ValidationRules.validateCreateProfileForm(LdapProfile, boolean)
						-com.symantec.uamCommon.validation.ValidationRules.validateProfileForm(LdapProfile, String[], boolean)
							-com.symantec.uamCommon.validation.ValidationUtils.validateString(String, String)
								-com.symantec.uamCommon.validation.ValidationUtils.validateString(String, String, boolean)
									-com.symantec.uamCommon.validation.ValidationUtils.validateStringContent(String, int, int, String, String)
										-com.symantec.uamCommon.validation.ValidationUtils.isWithinLatin1(String)
											-com.symantec.uamCommon.validation.ValidationRules.validateProfileForm(LdapProfile, String[], boolean)
												-com.symantec.uamCommon.validation.ValidationUtils.validateString(String, String)
													-com.symantec.uamCommon.validation.ValidationUtils.validateString(String, String, boolean)
														-com.symantec.uamCommon.validation.ValidationUtils.validateStringContent(String, int, int, String, String)
														-com.symantec.uamCommon.validation.ValidationUtils.isWithinUTF8(String)
		
		
	%NOTE : SAM Module has a seperate system to enroll a user which requires a more attention for UTF-8 changes
		- It's using SymAccountWS for validation internally so I guess we don't require seperate code change as such,
		only needs to change encoding at : *-com.symantec.sam.actions.CommonAccountAction.convertToEncoding(UserAccount)
		e.g. refer demouser1@symantec.com user's profile.
		
2. Update a user page.
	-/symacctmgt/j2ee-apps/symacctmgt/web-app/updateAccount/detail.jsp
	-com.symantec.sam.updateAccount.actions.ProcessAction
		-com.symantec.sam.updateAccount.actions.ExecuteUpdateAction
  		   *-com.symantec.sam.actions.CommonAccountAction.convertToEncoding(UserAccount)
			-com.symantec.sam.util.ProfileBroker.convertUserAccountToLdapProfile(UserAccount, LdapProfile)
			-com.symantec.sam.updateAccount.actions.ExecuteUpdateAction.updateProfile(UserAccount, boolean, LdapProfile, IUpdateAccountDelegate, String)
				-com.symantec.sam.delegates.UpdateAccountDelegate.updateProfile(String, LdapProfile, boolean, String)
					-com.symantec.sam.interfacesImpl.WebServiceClientImpl.updateProfile(String, LdapProfile, boolean, String)
						-com.symantec.it.ProfileWebServiceImpl.updateProfile(String, LdapProfile, boolean, String)
							-com.symantec.uamCommon.webservices.profile.ProfileDeligateImpl.updateProfile(String, LdapProfile, boolean, String)
								-com.symantec.uamCommon.validation.ValidationRules.validateUpdateProfileForm(LdapProfile, boolean, String)
									-
			
			
							
* Useful links :
----------------------------

1. Complete Character List for UTF-8 : 
	- http://www.fileformat.info/info/charset/UTF-8/list.htm
	- http://www.utf8-chartable.de/
2. Difference between UTF-8 & ISO-8859-1 :
	- http://stackoverflow.com/questions/7048745/difference-between-utf-8-and-iso-8859-1

3. For testing : 
	- http://www.columbia.edu/~fdc/utf8/
	- http://www.cl.cam.ac.uk/~mgk25/ucs/examples/quickbrown.txt
	- http://docwiki.cisco.com/wiki/Non-UTF-8_characters_needed_for_some_languages  // NON UTF-8 Characters
	
4. isWithinUTF8 code : http://www.coderanch.com/t/504267/java/java/validate-file-UTF-encoding





* Notes :
------------------------------

- UTF-8 is a multibyte encoding that can represent any Unicode character.
   ISO 8859-1 is a single-byte encoding that can represent the first 256 Unicode characters. Both encode ASCII exactly the same way.
  
- Test string : 
		- Valid UTF : 愛佳愛子
					    ઇનપુટ સાધનોને
		
		- Invalid UTF : çéñ			// Reference : http://docwiki.cisco.com/wiki/Non-UTF-8_characters_needed_for_some_languages

				
- ç,é or ñ. 
- AIKA (愛佳)	AIKO (愛子)
- çéñçéñ

- ISO-LATIN-1 Characters : 
			
	¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑ
	ÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ

	** Normal routine characters like a-z,A-Z,0-9 are not included.
	For full list of characters : http://cloford.com/resources/charcodes/isolatin1.htm
	
- The UTF-8 characters will be accepted for following fields : // as per SymAccount_UTF-8_Support_v1.xls 
	1. first name, -
	2. last name,  -
   *3. password,  - UTF-8 already but supporting printable ASCII only under SPECIAL_RULES_PASSWORD_COMPLEXITY
   *4. company name, - currenty doesn't throw any "...contains special caharaters..." error.//NEED TO CHECK refer:$1
	5. address1, -
	6. address2, -
	7. address3, -
    8. city, - 
   ?9. state  - It comes through dropdown (always!?)

- *Fields that are currently supports UTF-8 charset,
	-	password
	-	password2
	-	oldPassword
	-	companySize
	-	titleId
	-	salutation
	-	cn

$1 : 	Currently Company Name doesn't throw any "...contains special caharaters..." error, but address filds does. 
This field refers as a 'CustomerName' field, have to check whether this field nedds to change or not. 
	
 
愛佳愛子@gmail.com
pswtest@symantec.com
abcd1234愛佳愛子

for password special rules validation:
- com.symantec.uamCommon.validation.ValidationUtils.validateFieldWithSpecialRules(LdapProfile, String, String)
- com.symantec.uamCommon.password.PasswordFormatPolicy

- com.symantec.uamCommon.password.PasswordValidatorTest


* Milestones Dates	
------------------------------
Analysis and design complete	3/29/2013
Dev complete	4/5/2013
QA complete	4/26/2013
UAT Complete	5/10/2013
Go Live	6/5/2013

------------------------------
com.symantec.sam.actions.CommonAccountAction.convertToEncoding(UserAccount)

if (userAccount.getLastName() != null)
			userAccount.setLastName(new String(URLUtils.xssFilter(userAccount.getLastName()).trim()
					.getBytes("ISO-8859-1"), "UTF-8"));

String

1. public String(byte[] bytes,Charset charset)
Constructs a new String by decoding the specified array of bytes using the specified charset. 
The length of the new String is a function of the charset, and hence may not be equal to the length of the byte array. 
This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement string. 
The CharsetDecoder class should be used when more control over the decoding process is required. 

Parameters:
bytes - The bytes to be decoded into characters
charset - The charset to be used to decode the bytes
Since: 
1.6 

2. public String(byte[] bytes,String charsetName) throws UnsupportedEncodingException  //our code is using this...
Constructs a new String by decoding the specified array of bytes using the specified charset. 
The length of the new String is a function of the charset, and hence may not be equal to the length of the byte array. 
The behavior of this constructor when the given bytes are not valid in the given charset is unspecified.
The CharsetDecoder class should be used when more control over the decoding process is required. 


Parameters:
bytes - The bytes to be decoded into characters
charsetName - The name of a supported charset 
Throws: 
UnsupportedEncodingException - If the named charset is not supported
Since: 
JDK1.1 



Files that have this change :

1. //depot/it_www/ebiz/EnterprisePortal/commons/3.0.2.1/MySymcUtils/j2ee-apps/MySymcUtils/src/com/symantec/utils/FormUtils.java
2. //depot/it_www/ebiz/EnterprisePortal/mysymantec/3.0.2.1/buyingprogram/j2ee-apps/buyingprogram/src/com/symantec/iclick/create/actions/SetupContractRequestAction.java
3. //depot/it_www/ebiz/EnterprisePortal/SymAccount/3.0.2.1/UAMCommon/config/common/ValidationRules.properties
4. //depot/it_www/ebiz/EnterprisePortal/SymAccount/3.0.2.1/UAMCommon/src/com/symantec/uamCommon/validation/ValidationUtils.java
5. //depot/it_www/ebiz/EnterprisePortal/SymAccount/3.0.2.1/UAMCommon/test/com/symantec/uamCommon/validation/ValidateUtilsTest.java
6. //depot/it_www/ebiz/EnterprisePortal/mysymantec/3.0.2.1/buyingprogram/j2ee-apps/buyingprogram/web-app/iclick/createContract/newAgreement.jsp

7. //depot/it_www/ebiz/EnterprisePortal/mysymantec/3.0.2.1/buyingprogram/j2ee-apps/buyingprogram/src/com/symantec/iclick/create/actions/CommonAction.java
8. //depot/it_www/ebiz/EnterprisePortal/mysymantec/3.0.2.1/symacctmgt/j2ee-apps/symacctmgt/src/com/symantec/sam/actions/CommonAccountAction.java


Doubts to be discussed with Prasanth B :
- Do we need to change any validations rules as some field supports only Printable_ASCII
- How can we test on other environments as MySymantec DEV is not working.
- Fortify PCR is plaaning to go live in May end & we are also...
- field "company name" is reffered as "customer name" in SAM... refer : $1
- test cases/other documentations
- CPOE weekly status meeting
- we are only touching fields which are specified in 
